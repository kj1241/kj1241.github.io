name: IndexNow API Trigger

on:
  push:
    branches:
      - main  # 원하는 브랜치를 지정하세요

jobs:
  indexnow:
    runs-on: ubuntu-latest

    steps:
      # 1. 리포지토리 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # 2. Jekyll 설치
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
      
      - name: Install Jekyll and Bundler if not present
        run: |
          if ! gem list -i jekyll > /dev/null; then
            gem install jekyll
          fi
          if ! gem list -i bundler > /dev/null; then
            gem install bundler
          fi

      # 3. Dependencies 설치
      - name: Install dependencies if not present
        run: |
          if ! bundle check > /dev/null 2>&1; then
            bundle install
          else
            echo "Dependencies are already installed"
          fi
      
      # 4. Jekyll 빌드
      - name: Build the site if not already built
        run: |
          if [ ! -d "_site" ] || [ -z "$(ls -A _site)" ]; then
            bundle exec jekyll build
          else
            echo "Site already built"
          fi
      
      # 5. URL 목록 생성
      - name: Generate URL list
        run: |
          # Ensure the site is built and the URL list page is rendered
          bundle exec jekyll build
          # Read the rendered URL list from the generated site
          URL_LIST=$(cat _site/url-list.html | grep -o '\[.*\]')
          echo "Generated URL List: $URL_LIST"
          echo "URL_LIST=$URL_LIST" >> $GITHUB_ENV

      # 6. Bing 에게 IndexNow API 전송
      - name: Send POST request to IndexNow API
        env:
          HOST: kj1241.github.io
          KEY: be4399e1d45940f99cd62033acdfd1f4
          KEY_LOCATION: https://kj1241.github.io/be4399e1d45940f99cd62033acdfd1f4.txt
          URL_LIST: ${{ env.URL_LIST }}
        run: |
          echo "Using URL List: ${URL_LIST}"
          RESPONSE=$(curl -s -D - -w "\n%{http_code}" -X POST "https://www.bing.com/indexnow" \
          -H "Content-Type: application/json; charset=utf-8" \
          -d '{
            "host": "'"${HOST}"'",
            "key": "'"${KEY}"'",
            "keyLocation": "'"${KEY_LOCATION}"'",
            "urlList": '"${URL_LIST}"'
          }')

          # Split the response, headers, and the HTTP status code
          HTTP_HEADERS=$(echo "$RESPONSE" | sed -n '1,/^$/p')
          HTTP_BODY=$(echo "$RESPONSE" | sed '1,/^$/d' | sed '$d')
          HTTP_STATUS=$(echo "$RESPONSE" | tail -n1)

          echo "Response Headers: $HTTP_HEADERS"
          echo "Response Body: $HTTP_BODY"
          echo "HTTP Status: $HTTP_STATUS"

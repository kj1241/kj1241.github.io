---
layout: post
title: "Game AI 기말 과제 - 유사 Clustering AI 기획 및 제작 로그"
date: 2023-01-27 16:06:01 +09:00
image: https://drive.google.com/thumbnail?id=1s0G2EkeJhKOyJ8Gl-tlwd20R9g-m3dhP
toc: true
categories: [Unity]
keywords: C#, Unity, Similar Clustering
addsence: true
lastmod: 2024-05-30 09:00:00 +09:00
sitemap:
  changefreq : daily
  priority : 1.0
excerpt: AI 수업에서 영감을 받아 새들의 군집 비행을 시뮬레이션하는 프로젝트를 진행했습니다. 리더와 거리 유지 메커니즘을 구현하여 유니티로 미니게임을 만들었습니다.
related_links:
    - url: /ai/Similar_Clusters.html
---

## <ai_h2>1. 주제 선택의 이유</ai_h2>

AI 수업 첫 시간에 본 새들이 날아가는 군집 영상은 저에게 깊은 인상을 남겼습니다. 이 영상에서 영감을 받아, 저는 유사한 군집 행동을 시뮬레이션하는 프로그램을 만들어보기로 결심했습니다. 자연의 복잡한 행동을 디지털 환경에서 구현하는 도전적인 프로젝트를 통해 AI와 시뮬레이션 기술의 융합을 실험하고 싶었습니다. 이 프로젝트는 단순히 기술적인 도전일 뿐만 아니라 자연의 법칙을 이해하고 그것을 디지털로 재현하는 과정이기도 했습니다.

<br>
<br>

## <ai_h2>2. 분석 및 필요한 특징 도출</ai_h2>

새들의 비행 패턴을 연구한 결과, 두 가지 중요한 특징을 발견했습니다.

1. <ai_h5>우두머리 존재의 필요성:</ai_h5> 군집을 효과적으로 형성하려면 리더가 필요합니다. 리더 하이어라키 구조를 도입하여 군집체의 우두머리를 지정하고, 이를 통해 군집이 방향을 잡고 이동할 수 있도록 했습니다. 리더는 군집체가 올바른 경로를 따르도록 이끄는 중요한 요소입니다. 이 구조를 통해 개별 구성원들이 혼란스럽지 않게 일관된 방향으로 움직일 수 있습니다.

2. <ai_h5>일정한 간격 유지:</ai_h5> 군집체는 비행 시 일정한 간격을 유지해야 합니다. 군집체가 너무 멀어지면 인력으로 당기고, 너무 가까워지면 척력으로 밀어내는 방식으로 거리를 조절했습니다. 이는 군집이 효율적으로 이동하고 서로 충돌하지 않도록 하는 중요한 메커니즘입니다. 리더가 움직임을 멈추면 군집체가 위치를 조정하도록 구현하여 보다 자연스러운 이동을 가능하게 했습니다.

<br>
<br>

## <ai_h2>3. 주제에 대한 고려사항</ai_h2>

프로젝트 주제를 선정할 때 이미 존재하는 K-mean Clustering 알고리즘에 대해 알고 있었습니다. 하지만, 이 알고리즘은 비지도 학습 방식으로 데이터의 유사성을 기반으로 클러스터를 형성합니다. 게임의 동적인 환경과 실시간 반응성을 고려할 때 K-mean Clustering 알고리즘은 적합하지 않을 것으로 판단했습니다. 대신, 유사 군집학습 알고리즘을 만들어 특징을 세분화하고 코드를 작성하기로 결정했습니다. 이를 통해 실시간으로 변화하는 환경에서 군집체가 자연스럽게 반응할 수 있도록 했습니다.

<br>
<br>

## <ai_h2> 4. 구현 과정</ai_h2>

실제로 유니티로 구현하기위해 생각했던 과정들 입니다. 

### <ai_h3> 1) 우두머리의 존재 </ai_h3>

![우두머리]({{ site.google_drive }}11vCqxaKjstL0ZpGZ_FlkX61Aacq_v9cn{{ site.google_drive_end }}){:width="100%" height="auto" loading="lazy"}
*<ai_h6>리더를 설정하여 군집체의 계층적 구조를 형성한 모습</ai_h6>*

리더를 설정하여 군집체의 계층적 구조를 형성했습니다. 이를 통해 군집체 간의 소속을 명확하게 정의하고, 우두머리의 역할을 부여했습니다. 리더는 군집체가 이동할 방향과 속도를 결정하며, 전체 군집의 움직임을 통제하는 핵심 요소입니다. 리더의 역할을 명확하게 설정함으로써 군집체는 보다 조직적이고 일관되게 움직일 수 있습니다.

<br>

### <ai_h3> 2) 인력과 척력을 이용한 군집 위치 조정 </ai_h3>

![인력과 척력]({{ site.google_drive }}1bkylGn6qbIJ_nmiJsLU9hzRU64fPfa71{{ site.google_drive_end }}){:width="100%" height="auto" loading="lazy"}
*<ai_h6>인력과 척력을 이용하여 군집체의 위치를 조정한 모습</ai_h6>*


특정 거리 이내 혹은 이외로 이동하는 군집체에 대해 인력과 척력을 도입하여 군집체의 이동을 조절했습니다. 리더가 움직일 때 하위 군집체의 속도를 어떻게 조절할지에 대한 고민을 거쳐, 리더가 움직임을 종료한 후 군집체 위치를 조정하기로 결정했습니다. 이 과정에서 군집체 간의 상호작용을 자연스럽게 구현하기 위해 물리적 법칙을 적용했습니다. 이러한 상호작용은 군집이 일관되게 유지되면서도 유연하게 반응할 수 있도록 합니다.
  
<br>
<br>

## <ai_h2>5. 미니게임 설명</ai_h2>

![미니게임]({{ site.google_drive }}1s0G2EkeJhKOyJ8Gl-tlwd20R9g-m3dhP{{ site.google_drive_end }}){:width="100%" height="auto" loading="lazy"}
*<ai_h6>유사 군집 알고리즘을 이용한 미니게임의 모습</ai_h6>*

- <span><ai_h5>목표:</ai_h5> 플레이어는 AI에게서 군집체를 빼앗아 많이 획득해야 합니다.</span>
- <ai_h5>조건:</ai_h5>
    - 리더들의 특정 영역 안으로 군집체가 들어오면 군집체의 색상이 해당 리더의 색으로 변경됩니다. (영역 밖이면 흰색) 이를 통해 플레이어는 군집체의 소속을 시각적으로 쉽게 확인할 수 있습니다.
    - 리더들의 영역이 겹치면 군집체는 가까운 리더의 소속으로 변경됩니다. 이 조건은 리더들 간의 경쟁을 유발하여 게임을 더욱 흥미롭게 만듭니다.
    - 소속이 변경되면 군집체는 리더 쪽으로 인력과 척력이 발생하며, 군집체의 속도보다 리더의 속도가 더 빠릅니다. 이를 통해 리더의 움직임이 군집체에 미치는 영향을 직관적으로 느낄 수 있습니다.

<br>
<br>

## <ai_h2>6. 프로젝트 진행 후 소감</ai_h2>

이번 프로젝트를 통해 코드를 세분화하고 체계적으로 작성하는 방법을 익혔습니다. 또한, 상세한 기능 변경과 추가를 통해 미니게임이 더욱 흥미롭고 다양한 전략을 사용할 수 있게 되었습니다. 이러한 경험은 앞으로의 프로젝트에도 큰 도움이 될 것입니다. 특히, 자연의 복잡한 행동을 디지털로 재현하는 과정에서 많은 것을 배울 수 있었습니다.
  
이 프로젝트는 단순히 군집 행동을 시뮬레이션하는 것을 넘어서, 자연의 복잡한 시스템을 이해하고 그것을 기술적으로 구현하는 데 큰 도움이 되었습니다. 앞으로 이러한 경험을 바탕으로 더 복잡하고 정교한 시뮬레이션을 구현할 수 있을 것입니다. 
    
<br>
<br>

## <ai_h2>7. 향후 계획</ai_h2>

이번 프로젝트를 통해 얻은 경험을 바탕으로, 더 발전된 군집 행동 시뮬레이션을 구현할 계획입니다. 이를 위해 다음과 같은 추가 기능을 고려하고 있습니다.

1. <ai_h5>다양한 리더 유형 도입:</ai_h5> 각기 다른 특성을 가진 리더를 도입하여 군집체가 어떻게 반응하는지 실험해볼 예정입니다. 예를 들어, 속도가 빠른 리더, 방향을 자주 바꾸는 리더 등 다양한 시나리오를 구현해볼 것입니다.
2. <ai_h5>환경 변화에 대한 반응:</ai_h5> 군집체가 다양한 환경 변화에 어떻게 반응하는지 시뮬레이션할 계획입니다. 예를 들어, 장애물이 나타나거나 기상 조건이 변화하는 상황에서 군집체의 행동을 연구할 것입니다.
3. <ai_h5>학습 알고리즘 도입:</ai_h5> 군집체가 스스로 학습하여 더 효율적으로 움직일 수 있도록 강화학습 알고리즘을 도입할 계획입니다. 이를 통해 군집체의 움직임이 더 자연스럽고 지능적으로 변화할 수 있을 것입니다.